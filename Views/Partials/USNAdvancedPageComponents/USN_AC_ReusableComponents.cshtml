@inherits UmbracoViewPage<Usn_Ac_ReusableComponents_AN>

@using USNStarterKit.USNHelpers;
@using USN.USNTemplate;
@using Umbraco.Web.Models;

@using USNOptions = USNStarterKit.USNEnums.Options;

@{
    int globalSettingsId = Convert.ToInt32(ViewData["globalSettingsID"]);
    string sectionPadding = String.Empty;

    IEnumerable<IPublishedContent> components = Model.Components;

    string animateClass = String.Empty;

    if (Model.Animate)
    {
        animateClass = "os-animation";
    }

    USNTemplateStyleSettings settings = USNViewTemplateHelper.GetTemplateStyleSettings(Model.BackgroundColor, Model.ButtonColor);

    string backgroundImageStyle = USNViewTemplateHelper.GetBackgroundImageStyle(Model.BackgroundImage, Model.BackgroundImageOptions);

    if (components != null)
    {
        var publishedContents = components as IList<IPublishedContent> ?? components.ToList();

        bool hasTabs = (Model.Style == USNOptions.ReusableComponentStyle_Tabbed && publishedContents.Count > 1) ? true : false;

        int componentCount = 1;

        RelatedLinks introLinks = Model.IntroductionLinks;
        RelatedLinks outroLinks = Model.OutroLinks;

        //Tabs with no outro
        if (Model.OutroHeading == null && !Model.OutroText.HasValue() && outroLinks == null && hasTabs)
        {
            sectionPadding = "no-padding-bottom";
        }
        //Stacked no intro
        else if (Model.IntroductionHeading == null && !Model.IntroductionText.HasValue() && introLinks == null && !hasTabs)
        {
            sectionPadding = "no-padding-top";
        }
        //Stacked no outro
        if (Model.OutroHeading == null && !Model.OutroText.HasValue() && outroLinks == null && !hasTabs)
        {
            sectionPadding = sectionPadding + " no-padding-bottom";
        }

        <section class="content apc reusable-content tabbed @sectionPadding @settings.BackGroundStyle @Model.CustomComponentClasses" @Html.Raw(backgroundImageStyle) id="pos_@Model.Id">

            @Html.Partial("USNMiscPageElements/USN_ComponentIntro", @Model as IUsn_Cmp_IntroOutro, new ViewDataDictionary { { "animateClass", animateClass }, { "headingStyle", settings.HeadingStyle }, { "secondaryHeadingStyle", settings.SecondaryHeadingStyle }, { "textStyle", settings.TextStyle }, { "buttonStyle", settings.ButtonStyle }, { "addContainer", true } })

            @if (hasTabs)
            {
                <!-- ROW -->
                <div class="row tab-row text-center">

                    <nav class="tabs col-xs-12">
                        <ul class="nav nav-tabs" role="tablist">
                            @foreach (IPublishedContent component in publishedContents)
                            {

                                <li role="presentation" @if (componentCount == 1) { @Html.Raw("class=\"active\"")      }>
                                    <a class="tab-hash" href="#tab-name-@Model.Id-@componentCount" aria-controls="tab-name-@Model.Id-@componentCount" role="tab" data-toggle="tab">
                                        @component.Name
                                    </a>
                                </li>
                                componentCount += 1;
                            }
                        </ul>
                    </nav>

                </div>
	            <!--// ROW -->

                @:<div class="tab-content">

                componentCount = 1;
            }

            @foreach (IPublishedContent component in publishedContents)
            {
                if (hasTabs)
                {
                    @:<div id="tab-name-@Model.Id-@componentCount" role="tabpanel" class="tab-pane @if(componentCount == 1){@Html.Raw("active")}">
                }

                @Html.Partial("USNAdvancedPageComponents/USN_ComponentsSwitch", component, new ViewDataDictionary { { "globalSettingsID", globalSettingsId } })

                if (hasTabs)
                {
                    componentCount += 1;
                    @:</div>
                }
            }

            @if (hasTabs)
            {
                @:</div>
            }

            @Html.Partial("USNMiscPageElements/USN_ComponentOutro", @Model as IUsn_Cmp_IntroOutro, new ViewDataDictionary { { "animateClass", animateClass }, { "headingStyle", settings.HeadingStyle }, { "secondaryHeadingStyle", settings.SecondaryHeadingStyle }, { "textStyle", settings.TextStyle }, { "buttonStyle", settings.ButtonStyle }, { "addContainer", true } })

    </section>
    }
}
